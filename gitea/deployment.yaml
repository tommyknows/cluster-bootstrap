apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
  namespace: gitea
  labels:
    app: gitea
    webservice: "true"
    chart: "gitea-1.9.3"
    release: "gitea"
    heritage: "Tiller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea
  template:
    metadata:
      labels:
        webservice: "true"
        app: gitea
    spec:
      containers:
      - name: postgres
        image: "postgres:11"
        imagePullPolicy: "Always"
        env:
        - name: POSTGRES_USER
          value: "postgres"
        # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "postgres"
        - name: POSTGRES_DB
          value: "gitea"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitea-db
              key: dbPassword
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      - name: gitea
        image: gitea/gitea:1.9.4
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitea-db
              key: dbPassword
        ports:
        - name: ssh
          containerPort: 22
        - name: http
          containerPort: 3000
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 500Mi
        volumeMounts:
        - name: gitea-data
          mountPath: /data
        #- name: gitea-config
          #mountPath: /etc/gitea
      - name: memcached
        image: memcached:1.5.19-alpine
        command:
          - memcached
          - -m 64
          - -o
          - modern
          - -v
        ports:
        - name: memcache
          containerPort: 11211
        livenessProbe:
          tcpSocket:
            port: memcache
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: memcache
          initialDelaySeconds: 5
          timeoutSeconds: 1
        securityContext:
          runAsUser: 1000
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
      initContainers:
      - name: init
        image: gitea/gitea:1.9.4
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitea-db
              key: dbPassword
        - name: SCRIPT
          value: &script |-
            mkdir -p /datatmp/gitea/conf
            if [ ! -f /datatmp/gitea/conf/app.ini ]; then
              sed "s/POSTGRES_PASSWORD/${POSTGRES_PASSWORD}/g" < /etc/gitea/app.ini > /datatmp/gitea/conf/app.ini
            fi
        command: ["/bin/sh",'-c', *script]
        volumeMounts:
        - name: gitea-data
          mountPath: /datatmp
        - name: gitea-config
          mountPath: /etc/gitea
      volumes:
      - name: gitea-data
        hostPath:
          path: /mnt/data/cluster/gitea/gitea/data
          type: DirectoryOrCreate
      - name: postgres-data
        hostPath:
          path: /mnt/data/cluster/gitea/postgres
          type: DirectoryOrCreate
      - name: gitea-config
        configMap:
          name: gitea
