apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitea
  namespace: gitea
  labels:
    app: gitea
    webservice: "true"
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app: gitea
      webservice: "true"
  template:
    metadata:
      labels:
        app: gitea
        webservice: "true"
    spec:
      containers:
        # TODO: this runs ssh and gitea in one container.
        # it would make sense to split these up into two containers instead.
      - name: gitea
        image: gitea/gitea:latest
        ports:
        - name: ssh
          containerPort: 22
        - name: gitea-http
          containerPort: 3000
        livenessProbe:
          tcpSocket:
            port: gitea-http
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          tcpSocket:
            port: gitea-http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 500m
            memory: 750Mi
          requests:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
        - name: gitea-data
          mountPath: /data
        - name: gitea-db
          mountPath: /var/lib/gitea/data
        - name: gitea-configdir
          mountPath: /data/gitea/conf
      initContainers:
      - name: migrate
        image: gitea/gitea:latest
        securityContext:
          runAsUser: 1000 # run init as git user
        volumeMounts:
        - name: gitea-db
          mountPath: /db
        - name: gitea-data
          mountPath: /data
        - name: gitea-migration
          mountPath: /tmp/migration
        - name: gitea-configdir
          mountPath: /conf
        - name: gitea-config
          mountPath: /writeconf
        env:
        - name: SCRIPT
          value: &script |-
            cd /tmp/migration/
            cp -r gitea-repositories /data/
            # gitea wants a writeable config, so
            # we cannot use the configmap directly
            cp /writeconf/app.ini /conf/
            if [ -e /db/git.db ]; then exit 0; fi
            mkdir -p /data/git
            touch /db/git.db
            sqlite3 /db/git.db <gitea-db.sql
            chown git /db/git.db
            chgrp git /db/git.db
            chown -R git /data

        command: ["/bin/sh", "-c", *script]
      volumes:
      - name: gitea-data
        hostPath:
          path: /mnt/data/cluster/gitea/data
          type: Directory
      - name: gitea-db
        hostPath:
          path: /mnt/data/cluster/gitea/db
          type: Directory
      - name: gitea-config
        configMap:
          name: gitea-app-ini
      - name: gitea-configdir
        emptyDir: {}
      - hostPath:
          path: /mnt/data/cluster/gitea-migration
          type: Directory
        name: gitea-migration
